{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/form1/src/components/SelectEducation.js\";\n\n/* eslint-disable no-use-before-define */\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nexport default function Grouped() {\n  const [value, setValue] = React.useState(\"\");\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const options = education.map(option => {\n    const firstLetter = option.education[0].toUpperCase();\n    return {\n      firstLetter: /[0-9]/.test(firstLetter) ? \"0-9\" : firstLetter,\n      ...option\n    };\n  });\n  return /*#__PURE__*/React.createElement(Autocomplete, {\n    value: value,\n    onChange: (event, newValue) => {\n      setValue(newValue);\n    },\n    inputValue: inputValue,\n    onInputChange: (event, newInputValue) => {\n      setInputValue(newInputValue);\n    },\n    options: options.sort((ก, อ) => -อ.firstLetter.localeCompare(ก.firstLetter)),\n    groupBy: option => option.firstLetter,\n    getOptionLabel: option => option.education,\n    fullWidth: true,\n    id: \"auto-complete\",\n    autoComplete: true,\n    includeInputInList: true,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"\\u0E23\\u0E30\\u0E14\\u0E31\\u0E1A\\u0E01\\u0E32\\u0E23\\u0E28\\u0E36\\u0E01\\u0E29\\u0E32\",\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  });\n}\nconst education = [{\n  id_education: 1,\n  education: \"ประถมศึกษา\"\n}, {\n  id_education: 2,\n  education: \"มัธยมต้น\"\n}, {\n  id_education: 3,\n  education: \"มัธยมปลาย\"\n}, {\n  id_education: 4,\n  education: \"ปวช.\"\n}, {\n  id_education: 5,\n  education: \"ปวท.\"\n}, {\n  id_education: 6,\n  education: \"ปวส.\"\n}, {\n  id_education: 7,\n  education: \"ประกาศนียบัตร\"\n}, {\n  id_education: 8,\n  education: \"ประกาศนียบัตรบัณฑิต\"\n}, {\n  id_education: 9,\n  education: \"ประกาศนียบัตรบัณฑิตขั้นสูง\"\n}, {\n  id_education: 10,\n  education: \"อนุปริญญา\"\n}, {\n  id_education: 11,\n  education: \"ปริญญาตรี\"\n}, {\n  id_education: 13,\n  education: \"ปริญญาโท\"\n}, {\n  id_education: 13,\n  education: \"ปริญญาเอก\"\n}];","map":{"version":3,"sources":["/Users/apple/Desktop/form1/src/components/SelectEducation.js"],"names":["React","TextField","Autocomplete","Grouped","value","setValue","useState","inputValue","setInputValue","options","education","map","option","firstLetter","toUpperCase","test","event","newValue","newInputValue","sort","ก","อ","localeCompare","params","id_education"],"mappings":"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","sourcesContent":["/* eslint-disable no-use-before-define */\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nexport default function Grouped() {\n  const [value, setValue] = React.useState(\"\");\n  const [inputValue, setInputValue] = React.useState(\"\");\n\n  const options = education.map((option) => {\n    const firstLetter = option.education[0].toUpperCase();\n    return {\n      firstLetter: /[0-9]/.test(firstLetter) ? \"0-9\" : firstLetter,\n      ...option,\n    };\n  });\n\n  return (\n    <Autocomplete\n      value={value}\n      onChange={(event, newValue) => {\n        setValue(newValue);\n      }}\n      inputValue={inputValue}\n      onInputChange={(event, newInputValue) => {\n        setInputValue(newInputValue);\n      }}\n      options={options.sort(\n        (ก, อ) => -อ.firstLetter.localeCompare(ก.firstLetter)\n      )}\n      groupBy={(option) => option.firstLetter}\n      getOptionLabel={(option) => option.education}\n      fullWidth\n      id=\"auto-complete\"\n      autoComplete\n      includeInputInList\n      renderInput={(params) => (\n        <TextField {...params} label=\"ระดับการศึกษา\" margin=\"normal\" />\n      )}\n    />\n  );\n}\n\nconst education = [\n  { id_education: 1, education: \"ประถมศึกษา\" },\n  { id_education: 2, education: \"มัธยมต้น\" },\n  { id_education: 3, education: \"มัธยมปลาย\" },\n  { id_education: 4, education: \"ปวช.\" },\n  { id_education: 5, education: \"ปวท.\" },\n  { id_education: 6, education: \"ปวส.\" },\n  { id_education: 7, education: \"ประกาศนียบัตร\" },\n  { id_education: 8, education: \"ประกาศนียบัตรบัณฑิต\" },\n  { id_education: 9, education: \"ประกาศนียบัตรบัณฑิตขั้นสูง\" },\n  { id_education: 10, education: \"อนุปริญญา\" },\n  { id_education: 11, education: \"ปริญญาตรี\" },\n  { id_education: 13, education: \"ปริญญาโท\" },\n  { id_education: 13, education: \"ปริญญาเอก\" },\n];\n"]},"metadata":{},"sourceType":"module"}